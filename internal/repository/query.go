package repository

var (
	QueryGetAllProductsWithoutCondition1 = "SELECT p.*, c.name as category_name, (SELECT IFNULL(AVG(r.star), 0) FROM ratings r INNER JOIN transaction_items t on r.transaction_item_id = t.id WHERE t.product_id = p.id) as ratings, (SELECT pm.photo_url FROM product_media pm WHERE pm.product_id = p.id ORDER BY c.created_at LIMIT 1) as photo_url, (SELECT GROUP_CONCAT('discount_product_id_', p2.id) FROM products p2 WHERE p.quantity > 0 GROUP BY p.id) as product_id_string"
	QueryGetAllProductsWithoutCondition2 = " FROM products p INNER JOIN categories c ON p.category_id = c.id WHERE p.quantity > 0"
	QueryAdditionalForGetAllProducts     = ", IFNULL((SELECT 1 FROM wishlist w WHERE w.product_id = p.id AND w.user_id = :user_id), 0) as is_wishlisted"
	QueryGetDetailsProduct1              = "SELECT p.*, c.name as category_name, (SELECT IFNULL(AVG(r.star), 0) FROM ratings r INNER JOIN transaction_items t on r.transaction_item_id = t.id WHERE t.product_id = p.id) as ratings, (SELECT COUNT(*) FROM ratings r INNER JOIN transaction_items t on r.transaction_item_id = t.id WHERE t.product_id = p.id) as reviews_count"
	QueryGetDetailsProduct2              = " FROM products p INNER JOIN categories c on p.category_id = c.id WHERE p.id = :product_id"
	QueryAdditionalForGetDetailsProduct  = ", IFNULL((SELECT 1 FROM wishlist w WHERE w.product_id = p.id AND w.user_id = :user_id), 0) as is_wishlisted"
	QueryGetProductMedia                 = "SELECT pm.photo_url as url FROM product_media pm WHERE pm.product_id = :product_id ORDER BY pm.created_at"
	QueryGetReviewsProduct1              = "SELECT r.*, u.name, u.photo_url, (SELECT COUNT(*) FROM rating_helpfuls rh WHERE rh.rating_id =  r.id) as helpful_count"
	QueryGetReviewsProduct2              = ", GROUP_CONCAT(rm.photo_url) AS photo_reviews_urls_string FROM ratings r INNER JOIN transaction_items ti on r.transaction_item_id = ti.id INNER JOIN users u ON r.user_id = u.id LEFT JOIN rating_media rm ON rm.rating_id = r.id WHERE ti.product_id = :product_id GROUP BY r.id"
	QueryAdditionalForGetReviewsProduct  = ", IFNULL((SELECT 1 FROM rating_helpfuls rh WHERE rh.rating_id = r.id AND rh.user_id = :user_id), 0) as is_review_helpful"
	QueryGetMyCartAvailable              = "SELECT c.id, c.quantity, p.name, p.price, p.id as product_id, (SELECT pm.photo_url FROM product_media pm WHERE pm.product_id = p.id ORDER BY c.created_at LIMIT 1) as photo_url, (SELECT GROUP_CONCAT('discount_product_id_', c2.product_id) FROM carts c2 WHERE c.user_id = c2.user_id AND p.quantity >= c2.quantity GROUP BY c.id) as product_id_string FROM carts c INNER JOIN products p on c.product_id = p.id WHERE c.user_id = :user_id AND p.quantity >= c.quantity"
	QueryGetMyCartUnavailable            = "SELECT c.id, c.quantity, p.name, p.price, p.id as product_id, (SELECT pm.photo_url FROM product_media pm WHERE pm.product_id = p.id ORDER BY c.created_at LIMIT 1) as photo_url, (SELECT GROUP_CONCAT('discount_product_id_', c2.product_id) FROM carts c2 WHERE c.user_id = c2.user_id AND p.quantity < c2.quantity GROUP BY c.id) as product_id_string FROM carts c INNER JOIN products p on c.product_id = p.id WHERE c.user_id = :user_id AND p.quantity < c.quantity"
	QueryGetSpecificProductInCart        = "SELECT * FROM carts c WHERE product_id = :product_id AND user_id = :user_id"
	QueryGetMyWishlist                   = "SELECT p.id as product_id, w.id, p.name, p.price, c.name as category_name, (SELECT IFNULL(AVG(r.star), 0) FROM ratings r INNER JOIN transaction_items t on r.transaction_item_id = t.id WHERE t.product_id = p.id) as ratings, (SELECT pm.photo_url FROM product_media pm WHERE pm.product_id = p.id ORDER BY c.created_at LIMIT 1) as photo_url, (SELECT GROUP_CONCAT('discount_product_id_', w2.product_id) FROM wishlist w2 WHERE w.user_id = w2.user_id GROUP BY c.id) as product_id_string FROM wishlist w INNER JOIN products p on w.product_id = p.id INNER JOIN categories c on p.category_id = c.id WHERE w.user_id = :user_id"
	QueryGetSpecificProductInWishlist    = "SELECT * FROM wishlist w WHERE user_id = :user_id AND product_id = :product_id"
	QueryCountRatings                    = "SELECT COUNT(*) FROM ratings r INNER JOIN transaction_items ti on r.transaction_item_id = ti.id WHERE ti.product_id = :product_id"
	QueryRatingBreakdown                 = "SELECT r.star, COUNT(*) as total FROM ratings r INNER JOIN transaction_items ti on r.transaction_item_id = ti.id WHERE ti.product_id = :product_id GROUP BY r.star ORDER BY r.star"
)
