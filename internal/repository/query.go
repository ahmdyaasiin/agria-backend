package repository

var (
	QueryGetEducation = "SELECT e.id, e.title, (SELECT em.photo_url FROM education_media em WHERE em.education_id = e.id ORDER BY em.created_at LIMIT 1) as photo_url, u.name, u.photo_url as photo_url_author, e.created_at FROM educations e INNER JOIN contributors c on e.id = c.education_id INNER JOIN users u on c.user_id = u.id LIMIT 3"
)

var (
	QueryGetMainArticle      = "SELECT e.id, e.title, e.content, e.created_at, u.name as author, u.photo_url as photo_url_author, (SELECT em.photo_url FROM education_media em WHERE em.education_id = e.id ORDER BY em.created_at LIMIT 1) as photo_url FROM educations e INNER JOIN contributors c ON e.id = c.education_id AND c.role = 'Writter' INNER JOIN users u ON c.user_id = u.id WHERE e.id = :id;"
	QueryGetMustRead         = "SELECT e.id, e.title, e.content, e.created_at, u.name as author, u.photo_url as photo_url_author, (SELECT em.photo_url FROM education_media em WHERE em.education_id = e.id ORDER BY em.created_at LIMIT 1) as photo_url FROM educations e INNER JOIN contributors c ON e.id = c.education_id AND c.role = 'Writter' INNER JOIN users u ON c.user_id = u.id WHERE e.id IN (%s) ORDER BY e.created_at DESC;"
	QueryGetLatest           = "SELECT e.id, e.title, e.content, e.created_at, u.name AS author, u.photo_url AS photo_url_author, (SELECT em.photo_url FROM education_media em WHERE em.education_id = e.id ORDER BY em.created_at LIMIT 1) as photo_url FROM educations e INNER JOIN contributors c ON e.id = c.education_id AND c.role = 'Writter' INNER JOIN users u ON c.user_id = u.id WHERE e.id NOT IN (%s) ORDER BY e.created_at DESC LIMIT 0, 16;"
	QueryGetDiscoverMore     = "SELECT e.id, e.title, e.content, e.created_at, u.name AS author, u.photo_url AS photo_url_author, (SELECT em.photo_url FROM education_media em WHERE em.education_id = e.id ORDER BY em.created_at LIMIT 1) as photo_url FROM educations e INNER JOIN contributors c ON e.id = c.education_id AND c.role = 'Writter' INNER JOIN users u ON c.user_id = u.id WHERE e.id NOT IN (%s) ORDER BY RAND()"
	QueryGetEducationDetails = "SELECT e.id, e.content, e.title, e.created_at, u.name as author, em.photo_url as photo_url, u.photo_url as photo_url_author FROM educations e INNER JOIN agria.education_media em on e.id = em.education_id INNER JOIN agria.contributors c on e.id = c.education_id AND c.role = 'Writter' INNER JOIN agria.users u on c.user_id = u.id WHERE e.id = :id"
)

var (
	QueryGetPropertyDetails      = "SELECT p.id, p.name, p.price, p.description, p.width, p.state as province, p.city, p.certification_type as ownership_type, IFNULL((SELECT 1 FROM property_wishlist pw WHERE pw.property_id = p.id AND pw.user_id = :user_id), 0) as in_wishlist, c.name as category_name, u.name as name_of_owner, u.photo_url FROM properties p INNER JOIN categories c on p.category_id = c.id INNER JOIN users u on p.user_id = u.id WHERE p.id = :property_id"
	QueryGetPropertyHighlights   = "SELECT h.name, h.photo_url FROM property_highlights ph INNER JOIN highlights h on ph.highlight_id = h.id WHERE ph.property_id = :property_id"
	QueryGetPropertyMedia        = "SELECT pm.photo_url FROM property_media pm WHERE pm.property_id = :property_id"
	QueryGetPropertyDiscuss      = "SELECT d.id, d.content, u.name, u.photo_url, (SELECT GROUP_CONCAT(d2.id, '_', d2.content, '_', u2.name, '_', u2.photo_url, '_', (CASE WHEN u2.id = p.user_id THEN 1 ELSE 0 END), '$$$$$$$$$$$$$$$$$$' ORDER BY d2.created_at) FROM discussions d2 INNER JOIN properties p on d2.property_id = p.id INNER JOIN users u2 on d2.user_id = u2.id WHERE d2.discussion_id = d.id) as answers_string FROM discussions d INNER JOIN users u on d.user_id = u.id WHERE d.property_id = :property_id AND d.discussion_id = '' OR d.discussion_id IS NULL"
	QueryGetPropertyRatings      = "SELECT pr.id, u.name, u.photo_url, pr.content, IFNULL((SELECT 1 FROM property_rating_helpfuls prh WHERE prh.property_rating_id = pr.id AND prh.user_id = :user_id), 0) as is_helpful, (SELECT COUNT(*) FROM property_rating_helpfuls prh WHERE prh.property_rating_id = pr.id) as count_helpful, (SELECT GROUP_CONCAT(prm.photo_url) FROM property_rating_media prm WHERE prm.property_rating_id = pr.id) as photo_urls_string FROM property_ratings pr INNER JOIN users u on pr.user_id = u.id INNER JOIN property_transactions pt on pr.property_transaction_id = pt.id WHERE pt.property_id = :property_id"
	QueryGetProvinces            = "SELECT DISTINCT p.state FROM properties p"
	QueryRatingPropertyBreakdown = "SELECT pr.star, COUNT(*) as total FROM property_ratings pr INNER JOIN property_transactions pt on pr.property_transaction_id = pt.id WHERE pt.property_id = :property_id GROUP BY pr.star"
)

var (
	QueryGetAllPropertiesWithoutCondition1 = "SELECT p.id, p.name, c.name as category_name, p.city, p.price, p.width, p.certification_type, (SELECT IFNULL(AVG(pr.star), 0) FROM property_ratings pr INNER JOIN property_transactions pt on pr.property_transaction_id = pt.id WHERE pt.property_id = p.id) as ratings, (SELECT pm.photo_url FROM property_media pm WHERE pm.property_id = p.id ORDER BY pm.created_at LIMIT 1) as photo_url"
	QueryGetAllPropertiesWithoutCondition2 = " FROM properties p INNER JOIN categories c on p.category_id = c.id WHERE 1=1"
	QueryAdditionalForGetAllProperties     = ", IFNULL((SELECT 1 FROM property_wishlist pw WHERE pw.property_id = p.id AND pw.user_id = :user_id), 0) as is_wishlisted"
)

var (
	QueryGetAllProductsWithoutCondition1 = "SELECT p.*, c.name as category_name, (SELECT IFNULL(AVG(r.star), 0) FROM ratings r INNER JOIN transaction_items t on r.transaction_item_id = t.id WHERE t.product_id = p.id) as ratings, (SELECT pm.photo_url FROM product_media pm WHERE pm.product_id = p.id ORDER BY c.created_at LIMIT 1) as photo_url, (SELECT GROUP_CONCAT('discount_product_id_', p2.id) FROM products p2 WHERE p.quantity > 0 GROUP BY p.id) as product_id_string"
	QueryGetAllProductsWithoutCondition2 = " FROM products p INNER JOIN categories c ON p.category_id = c.id WHERE p.quantity > 0"
	QueryAdditionalForGetAllProducts     = ", IFNULL((SELECT 1 FROM wishlists w WHERE w.product_id = p.id AND w.user_id = :user_id), 0) as is_wishlisted"
	QueryGetDetailsProduct1              = "SELECT p.*, c.name as category_name, (SELECT IFNULL(AVG(r.star), 0) FROM ratings r INNER JOIN transaction_items t on r.transaction_item_id = t.id WHERE t.product_id = p.id) as ratings, (SELECT COUNT(*) FROM ratings r INNER JOIN transaction_items t on r.transaction_item_id = t.id WHERE t.product_id = p.id) as reviews_count"
	QueryGetDetailsProduct2              = " FROM products p INNER JOIN categories c on p.category_id = c.id WHERE p.id = :product_id"
	QueryAdditionalForGetDetailsProduct  = ", IFNULL((SELECT 1 FROM wishlists w WHERE w.product_id = p.id AND w.user_id = :user_id), 0) as is_wishlisted"
	QueryGetProductMedia                 = "SELECT pm.photo_url as url FROM product_media pm WHERE pm.product_id = :product_id ORDER BY pm.created_at"
	QueryGetReviewsProduct1              = "SELECT r.*, u.name, u.photo_url, (SELECT COUNT(*) FROM rating_helpfuls rh WHERE rh.rating_id =  r.id) as helpful_count"
	QueryGetReviewsProduct2              = ", IFNULL(GROUP_CONCAT(rm.photo_url), '') AS photo_reviews_urls_string FROM ratings r INNER JOIN transaction_items ti on r.transaction_item_id = ti.id INNER JOIN users u ON r.user_id = u.id LEFT JOIN rating_media rm ON rm.rating_id = r.id WHERE ti.product_id = :product_id GROUP BY r.id"
	QueryAdditionalForGetReviewsProduct  = ", IFNULL((SELECT 1 FROM rating_helpfuls rh WHERE rh.rating_id = r.id AND rh.user_id = :user_id), 0) as is_review_helpful"
	QueryGetMyCartAvailable              = "SELECT c.id, c.quantity, p.name, p.price, p.id as product_id, (SELECT pm.photo_url FROM product_media pm WHERE pm.product_id = p.id ORDER BY c.created_at LIMIT 1) as photo_url, (SELECT GROUP_CONCAT('discount_product_id_', c2.product_id) FROM carts c2 WHERE c.user_id = c2.user_id AND p.quantity >= c2.quantity GROUP BY c.id) as product_id_string FROM carts c INNER JOIN products p on c.product_id = p.id WHERE c.user_id = :user_id AND p.quantity >= c.quantity"
	QueryGetMyCartUnavailable            = "SELECT c.id, c.quantity, p.name, p.price, p.id as product_id, (SELECT pm.photo_url FROM product_media pm WHERE pm.product_id = p.id ORDER BY c.created_at LIMIT 1) as photo_url, (SELECT GROUP_CONCAT('discount_product_id_', c2.product_id) FROM carts c2 WHERE c.user_id = c2.user_id AND p.quantity < c2.quantity GROUP BY c.id) as product_id_string FROM carts c INNER JOIN products p on c.product_id = p.id WHERE c.user_id = :user_id AND p.quantity < c.quantity"
	QueryGetSpecificProductInCart        = "SELECT * FROM carts c WHERE product_id = :product_id AND user_id = :user_id"
	QueryGetMyWishlist                   = "SELECT p.id as product_id, w.id, p.name, p.price, c.name as category_name, (SELECT IFNULL(AVG(r.star), 0) FROM ratings r INNER JOIN transaction_items t on r.transaction_item_id = t.id WHERE t.product_id = p.id) as ratings, (SELECT pm.photo_url FROM product_media pm WHERE pm.product_id = p.id ORDER BY c.created_at LIMIT 1) as photo_url, (SELECT GROUP_CONCAT('discount_product_id_', w2.product_id) FROM wishlists w2 WHERE w.user_id = w2.user_id GROUP BY c.id) as product_id_string FROM wishlists w INNER JOIN products p on w.product_id = p.id INNER JOIN categories c on p.category_id = c.id WHERE w.user_id = :user_id"
	QueryGetSpecificProductInWishlist    = "SELECT * FROM wishlists w WHERE user_id = :user_id AND product_id = :product_id"
	QueryGetSpecificPropertyInWishlist   = "SELECT * FROM property_wishlist pw WHERE user_id = :user_id AND property_id = :property_id"
	QueryCountRatings                    = "SELECT COUNT(*) FROM ratings r INNER JOIN transaction_items ti on r.transaction_item_id = ti.id WHERE ti.product_id = :product_id"
	QueryRatingBreakdown                 = "SELECT r.star, COUNT(*) as total FROM ratings r INNER JOIN transaction_items ti on r.transaction_item_id = ti.id WHERE ti.product_id = :product_id GROUP BY r.star ORDER BY r.star"
	QueryGetMyPropertiesWishlist         = "SELECT p.id, p.name as name, IFNULL((SELECT 1 FROM property_wishlist pw WHERE pw.property_id = p.id AND pw.user_id = :user_id), 0) as in_wishlist, (SELECT pm.photo_url FROM property_media pm WHERE pm.property_id = p.id ORDER BY pm.created_at LIMIT 1) as photo_url, (SELECT IFNULL(AVG(pr.star), 0) FROM property_ratings pr INNER JOIN property_transactions pt on pr.property_transaction_id = pt.id WHERE pt.property_id = p.id) as ratings, c.name as category_name, p.price, p.certification_type, p.width, p.city, p.state, (SELECT GROUP_CONCAT('discount_property_id_', pw2.property_id) FROM property_wishlist pw2 WHERE pw.user_id = pw2.user_id GROUP BY c.id) as product_id_string FROM property_wishlist pw INNER JOIN properties p on pw.property_id = p.id INNER JOIN categories c on p.category_id = c.id LEFT JOIN property_transactions pt on p.id = pt.property_id WHERE (pt.status IS NULL OR pt.status = 'done') AND pw.user_id = :user_id"
)

var (
	QueryGetCountCart = "SELECT COUNT(*) FROM carts c WHERE c.user_id = :user_id"
)
